******* DMC8 Project File *******
* If you read this message, you need to install the last version of Deeds! *
FVR 2
DMC 2
ROM 5
RAM 5
POH 7
POG 6
POF 5
POE 4
POD 3
POC 2
POB 1
POA 0
PIH 7
PIG 6
PIF 5
PIE 4
PID 3
PIC 2
PIB 1
PIA 0
******* DMC8 Project File *******
NUM EQU 02h
RESULT EQU 8000H
;-----------------
ORG 0000H
JP 0100H
ORG 0100H
;-----------------
POLY:	LD B, NUM
	LD C, 04H
	CALL POWER	; 2 to the power 4
	LD C, 02H
	CALL TIMES_2	; 4 *(2 to the power 4)
	LD H, B	; save the partial res
	LD B, NUM
	LD C, 03H
	CALL POWER	; 2 to the power 3
	LD C, 03H	
	CALL TIMES_X	; 3 * (2 to the power 3)
	LD L, B	; save the second partial result
	LD B, NUM
	LD C, 2
	CALL POWER	; 2 to the power 2
	LD C, 1
	CALL TIMES_2	; 2* (2 to the power 2)
	LD E, B	; save the third partial result
	LD A, NUM	; compute the total result
	ADD A, H
	ADD A, L
	ADD A, E
	LD (RESULT), A	; print the result
END:	HALT
;--------------------------
POWER:	PUSH DE
	LD A, B	; B holds the number x, C holds the power N
	DEC C		; there are n-1 multiplications in x to the power n
	LD D, B	; D holds the x so we can add x to x, x times.
	DEC D		; we already have number x in A, so we need to add it x-1 times
MULT:	ADD A, A
	DEC D
	JP NZ, MULT
POW:	LD D, B
	DEC D	
	DEC C
	JP NZ, MULT
SAVE:	LD B, A	; save the x to the nth power result into B
	POP DE
	RET		; returns the result with B, takes the arguments with B and C
;---------------------------
TIMES_2:	SLA B		; multiply with 2
	DEC C		
	JP NZ, TIMES_2	
	RET		; returns the result with B, takes the arguments with B and C
;---------------------------
TIMES_X:	PUSH DE
	LD A, B	; multiply with x
	LD D, B
	DEC C		; first sum is already in A
ADDLOOP:	ADD A, D
	DEC C
	JP NZ, ADDLOOP
	LD B, A
	POP DE
	RET		; returns the result with B, takes the arguments with B and C


